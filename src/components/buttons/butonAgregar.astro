---
import AgregarIcon from "../../../public/icons/agrgarIcon.astro";
import Buton1 from "./buton1.astro";


---

<!-- HTML -->
<div class="container">
    <button id="openModalBtn3" class="btn size-12 bg-blue-900">
        <AgregarIcon />
    </button>
</div>

<dialog
    id="myModal3"
    class="modal items-center justify-center bg-transparent px-4 text-2xl backdrop:bg-black/20 backdrop:backdrop-blur-sm sm:px-0"
>
    <button
        type="button"
        id="close-dialog3"
        class="close-dialog fixed right-1/4 top-20 rounded p-4 transition hover:scale-110 hover:bg-accent hover:text-black"
    >
        <!--?xml version="1.0" ?-->
        <svg
            fill="none"
            height="30"
            viewBox="0 0 20 20"
            width="30"
            xmlns="http://www.w3.org/2000/svg"
            ><path
                clip-rule="evenodd"
                d="M5.17157 8.00003L0.585785 3.41424L3.41421 0.585815L8 5.1716L12.5858 0.585815L15.4142 3.41424L10.8284 8.00003L15.4142 12.5858L12.5858 15.4142L8 10.8285L3.41421 15.4142L0.585785 12.5858L5.17157 8.00003Z"
                fill="#fff"
                fill-rule="evenodd"></path></svg
        >
    </button>
    <form id="myForm3" class="Form"  enctype="multipart/form-data">
        <h1 class="titulo text-4xl">Crear usuario</h1>
        <div class="inputs">
            <label class="text-xl">Nombres:</label>
            <input type="text" id="name" class="text-lg" autofocus/>
        </div>
        <div class="inputs">
            <label class="text-xl">Apellidos:</label>
            <input type="text" id="lastname" class="text-lg" autofocus />
        </div>
        <div class="inputs">
            <label class="text-xl">Usuario:</label>
            <input type="text" id="user" class="text-lg" autofocus/>
        </div>
        <div class="inputs">
            <label for="password" class="text-xl">Contraseña:</label>
            <input type="password" id="password" class="text-lg" autofocus/>
        </div>
        <div class="inputs">
            <label class="text-xl">Rol:</label>
            <select id="role" class="form-select text-lg"  >
                <option selected>Seleccionar...</option>
                <option>Administrador</option>
                <option>Usuario</option>
            </select>
        </div>

        <div class="flex mt-8 ml-12">
            <Buton1 value="Crear" id="crear" />
        </div>
    </form>
</dialog>

<style>
    .Buton1 {
        margin-left: 10px;
    }
    .container {
        position: fixed;
        top: 85%;
        left: 94%;
    }

    .btn {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 10px;
        transition: 0.6s;
        width: 50px;
        height: 50px;
        border: none;
        outline: none;
    }

    .btn:hover {
        transform: scale(1.1);
    }
    .Form {
        width: 560px;
        align-items: center;
        border-radius: 15px;
        padding: 30px;
        background-color: rgb(255, 255, 255);
    }
    .titulo {
        text-align: center;
        margin-bottom: 10px;
    }

    .inputs {
        margin-bottom: 10px;
        display: flex;
        align-items: center;
    }

    .inputs label {
        flex: 0 0 150px; /* Ancho fijo para las etiquetas */
    }

    .inputs input,
    .inputs select {
        flex: 1; /* El input y select toma el espacio restante */
        border: 1px solid gray;
        border-radius: 5px;
        outline: none;
        padding: 5px;
    }

    select {
        border: 1px solid gray;
        border-radius: 5px;
        outline: none;
        padding: 5px;
    }
</style>

<script>
    // TypeScript
    const openModalBtn: HTMLButtonElement | null = document.getElementById(
        "openModalBtn3",
    ) as HTMLButtonElement;
    const myModal: HTMLDialogElement | null = document.getElementById(
        "myModal3",
    ) as HTMLDialogElement;
    const myForm: HTMLFormElement | null = document.getElementById(
        "myForm3",
    ) as HTMLFormElement;
    const closeButton: HTMLButtonElement | null = document.getElementById(
        "close-dialog3",
    ) as HTMLButtonElement;

    if (openModalBtn && myModal && myForm && closeButton) {
        openModalBtn.addEventListener("click", () => {
            myModal.showModal();
        });

        closeButton.addEventListener("click", () => {
            myModal.close();
        });

        // Cerrar el modal cuando se hace clic fuera de él
        myModal.addEventListener("click", (event) => {
            if (event.target === myModal) {
                myModal.close();
            }
        });

        // Cerrar el modal cuando se presiona la tecla Esc
        window.addEventListener("keydown", (event) => {
            if (event.key === "Escape" && myModal.open) {
                myModal.close();
            }
        });
    }
</script>
<script>
    const myForm3: HTMLFormElement | null = document.getElementById("myForm3") as HTMLFormElement;

    if (myForm3) {
        myForm3.addEventListener("submit", async (event) => {
            event.preventDefault(); // Evitar que el formulario se envíe automáticamente

            const formData = new FormData(myForm3); // Obtener los datos del formulario

            try {
                const response = await fetch('http://localhost:4321/src/pages/api/apiUsuario.js', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    // Si la solicitud se completó con éxito, puedes mostrar un mensaje al usuario o hacer cualquier otra acción necesaria
                  
                    console.log("Datos guardados correctamente");
                } else {
                    // Si hay algún error en la respuesta de la API, puedes manejarlo aquí
                    console.error("Error al guardar los datos:", response.statusText);
                }
            } catch (error) {
                // Si hay algún error en la solicitud (por ejemplo, problema de red), puedes manejarlo aquí
                console.error("Error de red:", error);
            }
        });
    }
</script>

